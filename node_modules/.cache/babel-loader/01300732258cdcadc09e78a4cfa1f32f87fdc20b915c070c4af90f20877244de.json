{"ast":null,"code":"var _jsxFileName = \"/Users/loganwelch/workspace/trophytanks-client/src/views/ApplicationViews.js\",\n  _s = $RefreshSig$();\nimport { Route, Routes } from \"react-router-dom\";\nimport { Login } from \"../components/auth/Login\";\nimport { Register } from \"../components/auth/Register\";\nimport { Authorized } from \"./Authorized\";\nimport { TankList } from \"../components/tanks/TanksList\";\nimport { TankDetails } from \"../components/tanks/TankDetails\";\nimport { EditTankForm } from \"../components/tanks/EditTank\";\n// import { TagList } from \"../components/tags/TagList\"\nimport { CurrentUserTanks } from \"../components/tanks/CurrentUserTanks\";\n// import { UserList } from \"../components/users/UserList\"\n// import { TankForm } from \"../components/tanks/TankForm\"\nimport { useState, useEffect } from \"react\";\n// import { getAllTags } from \"../managers/TagManager\"\n// import { UserProfile } from \"../components/users/UserDetails\";  // Adjust the path as needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ApplicationViews = ({\n  token,\n  setToken\n}) => {\n  _s();\n  const [tags, setTags] = useState([]);\n\n  // useEffect(() => {\n  //     // Fetch tags from the server and update the state\n  //     getAllTags().then((tagsData) => setTags(tagsData));\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {\n          setToken: setToken\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(Register, {\n          setToken: setToken\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        element: /*#__PURE__*/_jsxDEV(Authorized, {\n          token: token\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 29\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/tanks\",\n          children: /*#__PURE__*/_jsxDEV(Route, {\n            index: true,\n            element: /*#__PURE__*/_jsxDEV(TankList, {\n              setToken: setToken\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/tanks/:tankId\",\n          element: /*#__PURE__*/_jsxDEV(TankDetails, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/my-tanks/:tankId\",\n          element: /*#__PURE__*/_jsxDEV(TankDetails, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 58\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/tanks/:tankId/edit\",\n          element: /*#__PURE__*/_jsxDEV(EditTankForm, {\n            token: token,\n            setToken: setToken\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 60\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/my-tanks\",\n          children: /*#__PURE__*/_jsxDEV(Route, {\n            index: true,\n            element: /*#__PURE__*/_jsxDEV(CurrentUserTanks, {\n              token: token\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(ApplicationViews, \"DL0uTSUGlGEljgppeJDEmbue1U0=\");\n_c = ApplicationViews;\n{/* <Route path=\"/tanks/:tankId/edit\" element={<EditTankForm token={token} setToken={setToken} />} />\n <Route path=\":tankId\" element={<TankDetails setToken={setToken} />} />\n <Route path=\"create\" element={<TankForm token={token} setToken={setToken} categories={categories} tags={tags} />} /> */}\n{/* <Route path=\"/tags\">\n                    <Route index element={<TagList setToken={setToken} />} />\n                </Route>\n                 <Route path=\"/users\">\n                    <Route index element={<UserList setToken={setToken} />} />\n                    <Route path=\":userId\" element={<UserProfile />} />\n                </Route> */}\nvar _c;\n$RefreshReg$(_c, \"ApplicationViews\");","map":{"version":3,"names":["Route","Routes","Login","Register","Authorized","TankList","TankDetails","EditTankForm","CurrentUserTanks","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","ApplicationViews","token","setToken","_s","tags","setTags","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","index","_c","$RefreshReg$"],"sources":["/Users/loganwelch/workspace/trophytanks-client/src/views/ApplicationViews.js"],"sourcesContent":["import { Route, Routes } from \"react-router-dom\"\nimport { Login } from \"../components/auth/Login\"\nimport { Register } from \"../components/auth/Register\"\nimport { Authorized } from \"./Authorized\"\nimport { TankList } from \"../components/tanks/TanksList\"\nimport { TankDetails } from \"../components/tanks/TankDetails\"\nimport { EditTankForm } from \"../components/tanks/EditTank\"\n// import { TagList } from \"../components/tags/TagList\"\nimport { CurrentUserTanks } from \"../components/tanks/CurrentUserTanks\"\n// import { UserList } from \"../components/users/UserList\"\n// import { TankForm } from \"../components/tanks/TankForm\"\nimport { useState, useEffect } from \"react\"\n// import { getAllTags } from \"../managers/TagManager\"\n// import { UserProfile } from \"../components/users/UserDetails\";  // Adjust the path as needed\n\n\n\nexport const ApplicationViews = ({ token, setToken }) => {\n\n    const [tags, setTags] = useState([]);\n\n    // useEffect(() => {\n    //     // Fetch tags from the server and update the state\n    //     getAllTags().then((tagsData) => setTags(tagsData));\n    // }, []);\n\n\n    return <>\n        <Routes>\n            <Route path=\"/login\" element={<Login setToken={setToken} />} />\n            <Route path=\"/register\" element={<Register setToken={setToken} />} />\n            <Route element={<Authorized token={token} />} >\n\n                <Route path=\"/tanks\">\n                    <Route index element={<TankList setToken={setToken} />} />\n                </Route>\n                <Route path=\"/tanks/:tankId\" element={<TankDetails />} />\n                <Route path=\"/my-tanks/:tankId\" element={<TankDetails />} />\n                <Route path=\"/tanks/:tankId/edit\" element={<EditTankForm token={token} setToken={setToken} />} />\n                \n                <Route path=\"/my-tanks\">\n                    <Route index element={<CurrentUserTanks token={token} />} />\n\n                </Route>\n\n                \n            </Route>\n\n        </Routes>\n    </>\n}\n\n{/* <Route path=\"/tanks/:tankId/edit\" element={<EditTankForm token={token} setToken={setToken} />} />\n<Route path=\":tankId\" element={<TankDetails setToken={setToken} />} />\n<Route path=\"create\" element={<TankForm token={token} setToken={setToken} categories={categories} tags={tags} />} /> */}\n\n{/* <Route path=\"/tags\">\n                    <Route index element={<TagList setToken={setToken} />} />\n                </Route>\n\n                <Route path=\"/users\">\n                    <Route index element={<UserList setToken={setToken} />} />\n                    <Route path=\":userId\" element={<UserProfile />} />\n                </Route> */}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}